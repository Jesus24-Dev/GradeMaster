/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package grademaster.views.panels.content.principal;

import grademaster.GradeMaster;
import grademaster.models.Subjects;
import grademaster.models.TeacherSubject;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus24-Dev
 */
public class SubjectsPrincipalView extends javax.swing.JPanel {

    String subjectName;
    
    public SubjectsPrincipalView() {
        initComponents();
        fillTable();
        fillSubjectTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        subjectTeacherTable = new javax.swing.JTable();
        assignTeacherButton = new javax.swing.JButton();
        changeTeacherButton = new javax.swing.JButton();
        deleteAssignmentButton = new javax.swing.JButton();
        addSubjectButton = new javax.swing.JButton();
        deleteSubjectButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        subjectTeacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "LASTNAME", "SUBJECT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(subjectTeacherTable);
        if (subjectTeacherTable.getColumnModel().getColumnCount() > 0) {
            subjectTeacherTable.getColumnModel().getColumn(0).setResizable(false);
            subjectTeacherTable.getColumnModel().getColumn(1).setResizable(false);
            subjectTeacherTable.getColumnModel().getColumn(2).setResizable(false);
        }

        assignTeacherButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        assignTeacherButton.setText("Assign Teacher");
        assignTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignTeacherButtonActionPerformed(evt);
            }
        });

        changeTeacherButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        changeTeacherButton.setText("Change teacher");
        changeTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTeacherButtonActionPerformed(evt);
            }
        });

        deleteAssignmentButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        deleteAssignmentButton.setText("Delete Assignment");
        deleteAssignmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAssignmentButtonActionPerformed(evt);
            }
        });

        addSubjectButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        addSubjectButton.setText("Add new Subject");
        addSubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubjectButtonActionPerformed(evt);
            }
        });

        deleteSubjectButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        deleteSubjectButton.setText("Delete subject");
        deleteSubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSubjectButtonActionPerformed(evt);
            }
        });

        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SUBJECT NAME"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(subjectTable);
        if (subjectTable.getColumnModel().getColumnCount() > 0) {
            subjectTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("SUBJECTS LIST");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteSubjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addSubjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(changeTeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteAssignmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignTeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(assignTeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(changeTeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(deleteAssignmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteSubjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addSubjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteAssignmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAssignmentButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteAssignmentButtonActionPerformed

    private void assignTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignTeacherButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignTeacherButtonActionPerformed

    private void changeTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTeacherButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeTeacherButtonActionPerformed

    private void deleteSubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSubjectButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteSubjectButtonActionPerformed

    private void addSubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubjectButtonActionPerformed
        String subjectName = JOptionPane.showInputDialog(null, "Insert new subject name");
        if(subjectName != null){
             if (subjectName.equals("")){
            JOptionPane.showMessageDialog(null, "Name field can't be empty.");
        } else {
            int value = GradeMaster.subjectController.createSubject(subjectName.toUpperCase());
            
            if(value == 0){
                JOptionPane.showMessageDialog(null, "Subject created succesfully.");
            } else {
                JOptionPane.showMessageDialog(null, "This subject already exists.");
            }
        }
        fillSubjectTable();
        }       
    }//GEN-LAST:event_addSubjectButtonActionPerformed

    
    private void fillTable(){
        DefaultTableModel model = (DefaultTableModel) subjectTeacherTable.getModel();
        model.setRowCount(0);
        
        ArrayList<TeacherSubject> teacherList = GradeMaster.teacherSubjectController.getTeachers();
        
        if (teacherList != null){
            for (TeacherSubject ts : teacherList){
                String id = ts.getTeacherId();
                String name = ts.getTeacherName();
                String lastname = ts.getTeacherLastname();
                String subject = ts.getNameSubject();
                
                Object[] newRow = {id, name, lastname, subject};
                model.addRow(newRow);
            }
        }
    }
    
    private void fillSubjectTable(){
        DefaultTableModel model = (DefaultTableModel) subjectTable.getModel();
        model.setRowCount(0);
        
        ArrayList<Subjects> subjectList = GradeMaster.subjectController.getSubjects();
        
        if (subjectList != null){
            for (Subjects s: subjectList){
                String subject = s.getName();
                
                Object[] newRow = {subject};
                model.addRow(newRow);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSubjectButton;
    private javax.swing.JButton assignTeacherButton;
    private javax.swing.JButton changeTeacherButton;
    private javax.swing.JButton deleteAssignmentButton;
    private javax.swing.JButton deleteSubjectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable subjectTable;
    private javax.swing.JTable subjectTeacherTable;
    // End of variables declaration//GEN-END:variables
}
