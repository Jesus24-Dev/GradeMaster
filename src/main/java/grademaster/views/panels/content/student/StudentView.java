/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package grademaster.views.panels.content.student;

import grademaster.GradeMaster;
import grademaster.models.Grades;
import grademaster.models.Subjects;
import grademaster.models.YearList;
import grademaster.utils.StudyEnums;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus24-Dev
 */
public class StudentView extends javax.swing.JPanel {

    private StudyEnums.Period period;
    private StudyEnums.YearStudy yearStudy;
    private String id;
    
    public StudentView() {
        initComponents();
        setId();
        fillComponents();
        currentPeriod();
        currentYearStudy();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        studentGrades = new javax.swing.JTable();
        yearStudyList = new javax.swing.JComboBox<>();
        subjectList = new javax.swing.JComboBox<>();
        periodList = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentGrades.setBackground(new java.awt.Color(255, 255, 255));
        studentGrades.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        studentGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "YEAR STUDY", "SUBJECT", "PERIOD", "ACTIVITY", "GRADE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(studentGrades);
        if (studentGrades.getColumnModel().getColumnCount() > 0) {
            studentGrades.getColumnModel().getColumn(0).setResizable(false);
            studentGrades.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 354, 965, -1));

        yearStudyList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearStudyListActionPerformed(evt);
            }
        });
        add(yearStudyList, new org.netbeans.lib.awtextra.AbsoluteConstraints(574, 229, 125, 40));

        subjectList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectListActionPerformed(evt);
            }
        });
        add(subjectList, new org.netbeans.lib.awtextra.AbsoluteConstraints(727, 229, 125, 40));

        periodList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodListActionPerformed(evt);
            }
        });
        add(periodList, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 229, 125, 40));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Period");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 193, 109, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Subject");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(727, 193, 75, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Year Study");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(574, 193, 109, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("School Grades");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 81, 262, 126));
    }// </editor-fold>//GEN-END:initComponents

    private void periodListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_periodListActionPerformed
        currentPeriod();
        fillTable();
    }//GEN-LAST:event_periodListActionPerformed

    private void yearStudyListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearStudyListActionPerformed
        currentYearStudy();
        fillTable();
    }//GEN-LAST:event_yearStudyListActionPerformed

    private void subjectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectListActionPerformed
        fillTable();
    }//GEN-LAST:event_subjectListActionPerformed
    
    private void setId(){
        id = GradeMaster.user.getId();
    }
    
    private void fillComponents(){
        fillComboBoxEnums();
        fillSubjectsComboBox();
    }
    
    private void fillComboBoxEnums(){
        StudyEnums.YearStudy yearStudy[] = StudyEnums.YearStudy.values();
        StudyEnums.Period periodStudy[] = StudyEnums.Period.values();
        String yearStudyArr[] = new String[5];
        String periodArr[] = new String[3];
        
        for(int i = 0; i < 5; i++){
            yearStudyArr[i] = yearStudy[i].toString();
        }
        for(int i = 0; i < 3; i++){
            periodArr[i] = periodStudy[i].toString();
        }
        DefaultComboBoxModel<String> model1 = new DefaultComboBoxModel<>(yearStudyArr);
        DefaultComboBoxModel<String> model2 = new DefaultComboBoxModel<>(periodArr);
        yearStudyList.setModel(model1);
        periodList.setModel(model2);
    }
    
    private void fillSubjectsComboBox(){
        ArrayList<Subjects> subjects  = GradeMaster.subjectController.getSubjects();
        String subjectArr[] = new String[subjects.size() + 1];
        int i = 1;
        subjectArr[0] = "ALL SUBJECTS";
        for(Subjects s : subjects){
            subjectArr[i] = s.getName();
            i++;
        }
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(subjectArr);
        subjectList.setModel(model);
    }
    
    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) studentGrades.getModel();
        model.setRowCount(0);
        ArrayList<Grades> grades;
        
        if(checkSubject()){
           grades = GradeMaster.gradesController.getGradesStudent(id, yearStudy, period);
        } else {
            String subject = (String) subjectList.getSelectedItem();
            YearList student = GradeMaster.yearListController.getStudentFromList(GradeMaster.user.getId());
            grades = GradeMaster.gradesController.getGradesBySubjectStudent(id, subject, yearStudy, period);
        }
        
        for (Grades grade : grades) {
            String yearStudy = grade.getYearStudy().toString();  
            String subject = grade.getNameSubject();     
            String period = grade.getPeriod().toString();      
            String activity = grade.getActivity().toString();    
            float gradeValue = grade.getGrade(); 

            Object[] newRow = {yearStudy, subject, period, activity, gradeValue};
            model.addRow(newRow);
        }
    }
    
    private void currentPeriod(){
        period = StudyEnums.Period.valueOf((String) periodList.getSelectedItem());
    }
    
    private void currentYearStudy(){
        yearStudy = StudyEnums.YearStudy.valueOf((String) yearStudyList.getSelectedItem());
    }
    
    private boolean checkSubject(){
        return subjectList.getSelectedItem().equals("ALL SUBJECTS");
    }

    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> periodList;
    private javax.swing.JTable studentGrades;
    private javax.swing.JComboBox<String> subjectList;
    private javax.swing.JComboBox<String> yearStudyList;
    // End of variables declaration//GEN-END:variables
}
